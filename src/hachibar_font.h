#include <avr/io.h>
#include <avr/pgmspace.h>
#include "hachibar.h"

const unsigned char hachibar_font_data[] PROGMEM = {
0x00,0x00,0x00,0x00,0x00,  // space
0x00,0x00,0x5f,0x00,0x00,  // exclam
0x00,0x07,0x00,0x07,0x00,  // quotedbl
0x14,0x7f,0x14,0x7f,0x14,  // numbersign
0x04,0x2a,0x7f,0x2a,0x10,  // dollar
0x62,0x15,0x2a,0x54,0x23,  // percent
0x36,0x49,0x56,0x20,0x50,  // ampersand
0x00,0x00,0x07,0x00,0x00,  // quotesingle
0x00,0x1c,0x22,0x41,0x00,  // parenleft
0x00,0x41,0x22,0x1c,0x00,  // parenright
0x2a,0x1c,0x08,0x1c,0x2a,  // asterisk
0x08,0x08,0x3e,0x08,0x08,  // plus
0x00,0x00,0x60,0x20,0x00,  // comma
0x08,0x08,0x08,0x08,0x08,  // hyphen
0x00,0x40,0x60,0x40,0x00,  // period
0x60,0x10,0x08,0x04,0x03,  // slash
0x1c,0x22,0x41,0x22,0x1c,  // zero
0x44,0x42,0x7f,0x40,0x40,  // one
0x62,0x51,0x49,0x49,0x46,  // two
0x21,0x41,0x49,0x4d,0x33,  // three
0x18,0x14,0x12,0x7f,0x10,  // four
0x2f,0x49,0x45,0x45,0x39,  // five
0x3c,0x52,0x49,0x49,0x30,  // six
0x01,0x61,0x11,0x0d,0x03,  // seven
0x36,0x49,0x49,0x49,0x36,  // eight
0x06,0x49,0x49,0x25,0x1e,  // nine
0x00,0x44,0x6e,0x44,0x00,  // colon
0x00,0x04,0x6e,0x24,0x00,  // semicolon
0x00,0x08,0x14,0x22,0x41,  // less
0x14,0x14,0x14,0x14,0x14,  // equal
0x00,0x41,0x22,0x14,0x08,  // greater
0x02,0x01,0x59,0x05,0x02,  // question
0x3e,0x41,0x59,0x55,0x0e,  // at
0x7c,0x12,0x11,0x12,0x7c,  // A
0x41,0x7f,0x49,0x49,0x36,  // B
0x3e,0x41,0x41,0x41,0x22,  // C
0x41,0x7f,0x41,0x41,0x3e,  // D
0x7f,0x49,0x49,0x49,0x41,  // E
0x7f,0x09,0x09,0x09,0x01,  // F
0x3e,0x41,0x41,0x51,0x32,  // G
0x7f,0x08,0x08,0x08,0x7f,  // H
0x00,0x41,0x7f,0x41,0x00,  // I
0x20,0x40,0x41,0x3f,0x01,  // J
0x7f,0x08,0x14,0x22,0x41,  // K
0x7f,0x40,0x40,0x40,0x40,  // L
0x7f,0x04,0x08,0x04,0x7f,  // M
0x7f,0x04,0x08,0x10,0x7f,  // N
0x3e,0x41,0x41,0x41,0x3e,  // O
0x7f,0x09,0x09,0x09,0x06,  // P
0x3e,0x41,0x61,0x41,0x3e,  // Q
0x7f,0x09,0x19,0x29,0x46,  // R
0x26,0x49,0x49,0x49,0x32,  // S
0x01,0x01,0x7f,0x01,0x01,  // T
0x3f,0x40,0x40,0x40,0x3f,  // U
0x07,0x38,0x40,0x38,0x07,  // V
0x7f,0x20,0x18,0x20,0x7f,  // W
0x63,0x14,0x08,0x14,0x63,  // X
0x03,0x04,0x78,0x04,0x03,  // Y
0x61,0x51,0x49,0x45,0x43,  // Z
0x00,0x7f,0x41,0x41,0x00,  // bracketleft
0x03,0x04,0x08,0x10,0x60,  // backslash
0x00,0x41,0x41,0x7f,0x00,  // bracketright
0x04,0x02,0x01,0x02,0x04,  // asciicircum
0x00,0x00,0x00,0x00,0x00,  // underscore
0x00,0x00,0x00,0x01,0x00,  // grave
0x20,0x54,0x54,0x54,0x78,  // a
0x7f,0x28,0x44,0x44,0x38,  // b
0x38,0x44,0x44,0x44,0x28,  // c
0x38,0x44,0x44,0x28,0x7f,  // d
0x38,0x54,0x54,0x54,0x18,  // e
0x08,0x7e,0x09,0x09,0x02,  // f
0x18,0x24,0x24,0x24,0x7c,  // g
0x7f,0x08,0x04,0x04,0x78,  // h
0x00,0x44,0x7d,0x40,0x00,  // i
0x00,0x40,0x00,0x04,0x7d,  // j
0x7f,0x10,0x10,0x28,0x44,  // k
0x00,0x41,0x7f,0x40,0x00,  // l
0x7c,0x04,0x38,0x04,0x78,  // m
0x7c,0x08,0x04,0x04,0x78,  // n
0x38,0x44,0x44,0x44,0x38,  // o
0x7c,0x28,0x44,0x44,0x38,  // p
0x38,0x44,0x44,0x28,0x7c,  // q
0x7c,0x08,0x04,0x04,0x08,  // r
0x48,0x54,0x54,0x54,0x20,  // s
0x04,0x3f,0x44,0x44,0x20,  // t
0x3c,0x40,0x40,0x20,0x7c,  // u
0x0c,0x30,0x40,0x30,0x0c,  // v
0x3c,0x40,0x30,0x40,0x3c,  // w
0x44,0x28,0x10,0x28,0x44,  // x
0x1c,0x20,0x20,0x10,0x7c,  // y
0x44,0x64,0x54,0x4c,0x44,  // z
0x00,0x08,0x2a,0x55,0x41,  // braceleft
0x00,0x00,0x7f,0x00,0x00,  // bar
0x00,0x41,0x55,0x2a,0x08,  // braceright
0x06,0x01,0x02,0x04,0x03  // asciitilde
};

struct HachibarFont hachibar_font = {5, hachibar_font_data};
